[gd_resource type="VisualShader" load_steps=10 format=3 uid="uid://dfhe4d5e472j4"]

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_2t0gk"]
default_input_values = [0, 0.0, 1, 0.0, 2, 0.1, 3, Vector3(0, 0, 0), 4, Vector3(0, 0, 0), 5, Vector3(0, 0, 0)]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_51ko7"]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_d37f4"]
constant = 1.0

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_1gvoa"]
default_input_values = [0, 0.0, 1, 1.0]
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_ucqbv"]
output_port_for_preview = 2
expanded_output_ports = [0]
input_name = "uv"

[sub_resource type="VisualShaderNodeCompare" id="VisualShaderNodeCompare_8kdlr"]
default_input_values = [0, 0.0, 1, 0.99, 2, 1e-05]
function = 2

[sub_resource type="VisualShaderNodeSwitch" id="VisualShaderNodeSwitch_4acrj"]
default_input_values = [0, false, 1, 0.0, 2, 1.0]

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_p5tp5"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_ql5uh"]
input_name = "color"

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;




void fragment() {
// Input:6
	vec4 n_out6p0 = COLOR;


// ColorConstant:4
	vec4 n_out4p0 = vec4(1.000000, 1.000000, 1.000000, 1.000000);


// FloatConstant:14
	float n_out14p0 = 0.000000;


// FloatConstant:15
	float n_out15p0 = 1.000000;


	vec3 n_out13p0;
// If:13
	float n_in13p2 = 0.10000;
	if(abs(n_out6p0.x - n_out4p0.x) < n_in13p2)
	{
		n_out13p0 = vec3(n_out14p0);
	}
	else if(n_out6p0.x < n_out4p0.x)
	{
		n_out13p0 = vec3(n_out15p0);
	}
	else
	{
		n_out13p0 = vec3(n_out15p0);
	}


// Input:17
	vec2 n_out17p0 = UV;
	float n_out17p2 = n_out17p0.g;


// Compare:18
	float n_in18p1 = 0.99000;
	bool n_out18p0 = n_out17p2 > n_in18p1;


	float n_out19p0;
// Switch:19
	float n_in19p1 = 0.00000;
	float n_in19p2 = 1.00000;
	n_out19p0 = mix(n_in19p2, n_in19p1, float(n_out18p0));


// FloatOp:16
	float n_out16p0 = n_out13p0.x * n_out19p0;


// Output:0
	COLOR.a = n_out16p0;


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(1840, 380)
nodes/fragment/4/node = SubResource("VisualShaderNodeColorConstant_p5tp5")
nodes/fragment/4/position = Vector2(640, 440)
nodes/fragment/6/node = SubResource("VisualShaderNodeInput_ql5uh")
nodes/fragment/6/position = Vector2(380, 240)
nodes/fragment/13/node = SubResource("VisualShaderNodeIf_2t0gk")
nodes/fragment/13/position = Vector2(920, 420)
nodes/fragment/14/node = SubResource("VisualShaderNodeFloatConstant_51ko7")
nodes/fragment/14/position = Vector2(360, 500)
nodes/fragment/15/node = SubResource("VisualShaderNodeFloatConstant_d37f4")
nodes/fragment/15/position = Vector2(380, 640)
nodes/fragment/16/node = SubResource("VisualShaderNodeFloatOp_1gvoa")
nodes/fragment/16/position = Vector2(1420, 400)
nodes/fragment/17/node = SubResource("VisualShaderNodeInput_ucqbv")
nodes/fragment/17/position = Vector2(280, 840)
nodes/fragment/18/node = SubResource("VisualShaderNodeCompare_8kdlr")
nodes/fragment/18/position = Vector2(800, 820)
nodes/fragment/19/node = SubResource("VisualShaderNodeSwitch_4acrj")
nodes/fragment/19/position = Vector2(1100, 780)
nodes/fragment/connections = PackedInt32Array(6, 0, 13, 0, 4, 0, 13, 1, 14, 0, 13, 3, 15, 0, 13, 4, 15, 0, 13, 5, 13, 0, 16, 0, 16, 0, 0, 1, 17, 2, 18, 0, 18, 0, 19, 0, 19, 0, 16, 1)
